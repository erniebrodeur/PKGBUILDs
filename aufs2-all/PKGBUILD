# Maintainer: Dave Reisner <d@falconindy.com>
pkgname=aufs2-all
_pkgbase=aufs2
pkgver=2.6.33_20100225
pkgrel=1
_kernver=`uname -r`
pkgdesc="Another Unionfs Implementation. Builds modules for all detected kernels"
arch=('i686' 'x86_64')
url="http://aufs.sourceforge.net/"
license=('GPL2')
depends=('kernel26>=2.6.33' 'kernel26<2.6.34')
makedepends=('kernel26-headers>=2.6.33' 'kernel26-headers<2.6.34')
replaces=('aufs')
install=${_pkgbase}.install
source=(ftp://ftp.archlinux.org/other/aufs2/${_pkgbase}-${pkgver}.tar.gz)
options=(!makeflags)
md5sums=('4f54f9a77b86e2cbab01455613b8e3f6')

build() {
  cd ${srcdir}/${_pkgbase}-${pkgver} || return 1
  sed -i 's|CONFIG_AUFS_HINOTIFY =.*|CONFIG_AUFS_HINOTIFY = y|' \
     config.mk || return 1
  sed -i 's|CONFIG_AUFS_EXPORT =.*|CONFIG_AUFS_EXPORT = y|' \
     config.mk || return 1
  sed -i 's|CONFIG_AUFS_SHWH =.*|CONFIG_AUFS_SHWH = y|' \
     config.mk || return 1
  sed -i 's|CONFIG_AUFS_BDEV_LOOP =.*|CONFIG_AUFS_BDEV_LOOP = y|' \
     config.mk || return 1
  sed -i 's|CONFIG_AUFS_BR_RAMFS =.*|CONFIG_AUFS_BR_RAMFS = y|' \
     config.mk || return 1
  sed -i 's|CONFIG_AUFS_DEBUG =.*|CONFIG_AUFS_DEBUG =|' \
     config.mk || return 1
  if [ "${CARCH}" = "x86_64" ]; then
    inot64=" y"
  else
    inot64=""
  fi
  sed -i "s|CONFIG_AUFS_INO_T_64 =.*|CONFIG_AUFS_INO_T_64 =${inot64}|" \
     config.mk || return 1

  for _kernver in `file /boot/* | grep 'Linux kernel.*boot executable' | grep 'vmlinuz' | sed 's/.*version \([^ ]\+\).*/\1/'`;
  do

    msg2 "Building module for $_kernver..."
    # build
    make KDIR=/usr/src/linux-${_kernver} || return 1
    # install
    install -D -m644 fs/aufs/aufs.ko \
      $pkgdir/lib/modules/${_kernver}/kernel/fs/aufs/aufs.ko || return 1
    # tweak the install script for the right kernel version
    sed -i -e "s/KERNEL_VERSION=.*/KERNEL_VERSION=${_kernver}/g" \
      $startdir/$_pkgbase.install || return 1

    # install include files (kludgy, needs a better solution)
    if [[ ! -f /usr/src/linux-$_kernver/include/linux/aufs_type.h ]]; then
      install -D -m 644 include/linux/aufs_type.h $pkgdir/usr/src/linux-$_kernver/include/linux/aufs_type.h || return 1
    fi

    make clean
  done

}

