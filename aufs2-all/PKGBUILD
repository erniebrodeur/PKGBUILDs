# Maintainer: Dave Reisner <d@falconindy.com>

pkgname=aufs2-all
_pkgbase=aufs2
pkgver=2.6.37_20110105 
pkgrel=1
pkgdesc="Another Unionfs Implementation. Builds modules for all detected kernels"
arch=('i686' 'x86_64')
url="http://aufs.sourceforge.net/"
license=('GPL2')
replaces=('aufs')
conflicts=('aufs2')
provides=('aufs2')
install=aufs2.install
source=(ftp://ftp.archlinux.org/other/aufs2/${_pkgbase}-${pkgver}.tar.gz)
options=('!makeflags')
md5sums=('630c9c36bd4c0aa75a12b9bfa01ef8ee')

build() {
  cd ${srcdir}/${_pkgbase}-${pkgver}
  sed -i -e 's|CONFIG_AUFS_HNOTIFY =.*|CONFIG_AUFS_HNOTIFY = y|' \
         -e 's|CONFIG_AUFS_HFSNOTIFY =.*|CONFIG_AUFS_HFSNOTIFY = y|' \
         -e 's|CONFIG_AUFS_EXPORT =.*|CONFIG_AUFS_EXPORT = y|' \
         -e 's|CONFIG_AUFS_SHWH =.*|CONFIG_AUFS_SHWH = y|' \
         -e 's|CONFIG_AUFS_BDEV_LOOP =.*|CONFIG_AUFS_BDEV_LOOP = y|' \
         -e 's|CONFIG_AUFS_BR_RAMFS =.*|CONFIG_AUFS_BR_RAMFS = y|' \
         -e 's|CONFIG_AUFS_DEBUG =.*|CONFIG_AUFS_DEBUG =|' config.mk

  [[ "${CARCH}" = "x86_64" ]] && inot64="y" || inot64=""

  sed -i "s|CONFIG_AUFS_INO_T_64 =.*|CONFIG_AUFS_INO_T_64 =${inot64}|" config.mk

  for _kernver in $(file /boot/* | sed -n '/Linux kernel/s/.* version \(2\.6\.[-[:alnum:]_]\+\).*/\1/p'); do
    msg2 "Building module for $_kernver..."

    # KDIR is necessary even when cleaning
    make clean KDIR=/usr/src/linux-${_kernver}
    make aufs.ko KDIR=/usr/src/linux-${_kernver}

    install -D -m644 fs/aufs/aufs.ko $pkgdir/lib/modules/${_kernver}/kernel/fs/aufs/aufs.ko

    # install include files if not included with kernel
    [[ -f /usr/src/linux-$_kernver/include/linux/aufs_type.h ]] ||
      install -D -m 644 include/linux/aufs_type.h $pkgdir/usr/src/linux-$_kernver/include/linux/aufs_type.h

  done

}

